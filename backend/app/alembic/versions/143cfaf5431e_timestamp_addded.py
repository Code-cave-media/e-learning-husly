"""timestamp addded 

Revision ID: 143cfaf5431e
Revises: 10aa06f041f3
Create Date: 2025-05-13 14:28:06.210133

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '143cfaf5431e'
down_revision: Union[str, None] = '10aa06f041f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_e_books_id', table_name='e_books')
    op.drop_table('e_books')
    op.add_column('coupon_code', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('coupon_code', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('course', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('course', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('course', 'price',
               existing_type=sa.VARCHAR(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('course', 'commission',
               existing_type=sa.VARCHAR(),
               type_=sa.Float(),
               existing_nullable=True)
    op.add_column('course_chapter', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('course_chapter', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('e_book', sa.Column('commission', sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('e_book', 'commission')
    op.drop_column('course_chapter', 'updated_at')
    op.drop_column('course_chapter', 'created_at')
    op.alter_column('course', 'commission',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('course', 'price',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('course', 'updated_at')
    op.drop_column('course', 'created_at')
    op.drop_column('coupon_code', 'updated_at')
    op.drop_column('coupon_code', 'created_at')
    op.create_table('e_books',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('file', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('thumbnail', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='e_books_pkey')
    )
    op.create_index('ix_e_books_id', 'e_books', ['id'], unique=False)
    # ### end Alembic commands ###
